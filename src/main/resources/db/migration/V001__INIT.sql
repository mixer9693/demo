create table comments (id int4 not null, date_time timestamp, text varchar(255), author_id int4, issue_id int4, primary key (id));
create table history_item_types (id int4 not null, name varchar(255), primary key (id));
create table history_items (id int4 not null, date_time timestamp, message varchar(255), author_id int4, history_item_type_id int4, primary key (id));
create table issue_types (id int4 not null, name varchar(255), primary key (id));
create table issues (id int4 not null, author_id int4, status_id int4, type_id int4, primary key (id));
create table roles (id int4 not null, name varchar(255), primary key (id));
create table statuses (id int4 not null, name varchar(255), primary key (id));
create table tokens (id int4 not null, refresh_token varchar(255), user_id int4, primary key (id));
create table users (id int4 not null, email varchar(255), name varchar(255), phone varchar(255), primary key (id));
create table users_roles (user_id int4 not null, role_id int4 not null, primary key (user_id, role_id));
create sequence comment_id_seq start 1 increment 1;
create sequence history_item_id_seq start 1 increment 1;
create sequence history_item_type_id_seq start 1 increment 1;
create sequence issue_id_seq start 1 increment 1;
create sequence issue_type_id_seq start 1 increment 1;
create sequence role_id_seq start 1 increment 1;
create sequence status_id_seq start 1 increment 1;
create sequence token_id_seq start 1 increment 1;
create sequence user_id_seq start 1 increment 1;
alter table if exists comments add constraint comments_users_fk foreign key (author_id) references users;
alter table if exists comments add constraint comments_issues_fk foreign key (issue_id) references issues;
alter table if exists history_items add constraint history_items_users_fk foreign key (author_id) references users;
alter table if exists history_items add constraint history_items_history_item_type_fk foreign key (history_item_type_id) references history_item_types;
alter table if exists issues add constraint issues_users_fk foreign key (author_id) references users;
alter table if exists issues add constraint issues_statuses_fk foreign key (status_id) references statuses;
alter table if exists issues add constraint issues_issue_types_fk foreign key (type_id) references issue_types;
alter table if exists tokens add constraint tokens_users_fk foreign key (user_id) references users;
alter table if exists users_roles add constraint users_roles_roles_fk foreign key (role_id) references roles;
alter table if exists users_roles add constraint users_roles_users_fk foreign key (user_id) references users;
